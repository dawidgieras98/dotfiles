[
  {
    // Context: General editor mode with Vim controls; not waiting for Vim or menu input
    "context": "Editor && VimControl && !VimWaiting && !menu",
    "bindings": {
      "space /": [
        "task::Spawn",
        { "task_name": "Find in Files", "reveal_target": "center" }
      ],
      "space x": "projects::OpenRecent",
      "space t t": "terminal_panel::ToggleFocus",
      "shift-j": "editor::MoveLineDown",
      "shift-k": "editor::MoveLineUp",
      "g ]": "editor::GoToDiagnostic",
      "g [": "editor::GoToPreviousDiagnostic",
      "g r": "editor::FindAllReferences",
      "shift-d": "editor::Hover",
      "space c a": "editor::ToggleCodeActions",
      "space c r": "editor::Rename",
      "space c f": "editor::Format",
      "space c l": "diagnostics::Deploy",
      "g c c": "editor::ToggleComments",
      "space space": "file_finder::Toggle",
      "space o": "tab_switcher::ToggleAll",
      "space p": "outline::Toggle",
      "space g g": "workspace::ActivatePaneLeft",
      "space e": "workspace::ActivatePaneRight",
      "space d s": "editor::GoToDefinitionSplit"
    }
  },
  {
    // Context: Editor mode when in Vim's insert mode and not showing a menu
    "context": "Editor && vim_mode == insert && !menu",
    "bindings": {
      "j j": "vim::NormalBefore",
      "c c": "editor::ShowCompletions"
    }
  },
  {
    // Context: Editor mode when in Vim's visual mode, not waiting for input or handling an object
    "context": "Editor && vim_mode == visual && !VimWaiting && !VimObject",
    "bindings": {
      "space g h r": "git::Restore"
    }
  },
  {
    // Context for when no files are open
    "context": "EmptyPane || SharedScreen",
    "bindings": {
      "space /": [
        "task::Spawn",
        { "task_name": "Find in Files", "reveal_target": "center" }
      ],
      "space space": "file_finder::Toggle",
      "space e": "workspace::ToggleRightDock"
    }
  },
  {
    // Context: Terminal within the editor
    "context": "Terminal",
    "bindings": {
      "space t t": "terminal_panel::ToggleFocus",
      "alt-j": ["workspace::SendKeystrokes", "down"],
      "alt-k": ["workspace::SendKeystrokes", "up"],
      "q e": ["workspace::SendKeystrokes", "escape"]
    }
  },
  {
    // Context for the left dock focused on Git operations
    "context": "(GitPanel && ChangesList)",
    "bindings": {
      "g r": ["git::RestoreFile", { "skip_prompt": true }],
      "g c": "git::Commit",
      "g u": "git::Push"
    }
  },
  {
    "context": "GitCommit",
    "bindings": {
      "g b": "git::Commit"
    }
  },
  {
    // Context for editor in normal mode for fetching changes
    "context": "Editor && vim_mode == normal",
    "bindings": {
      "space g f": "git::Fetch",
      "space g p": "git::Pull",
      "space g h r": "git::Restore"
    }
  },
  {
    // Context for when the tab switcher is active !!! UNCOMMENT ONLY WHEN USING REGULAR TAB SWITCHER NOT OPTION WITH "ToggleAll"
    "context": "Workspace",
    "bindings": {
      "alt-j": "menu::SelectNext",
      "alt-k": "menu::SelectPrevious"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "alt-3": "pane::ActivateNextItem",
      "alt-1": "pane::ActivatePreviousItem"
    }
  },
  {
    // When using code completion and stuff like that
    "context": "Editor && (showing_code_actions || showing_completions)",
    "bindings": {
      "k": "editor::ContextMenuPrevious",
      "j": "editor::ContextMenuNext"
    }
  }
]
